@model StaffManagement.Models.Account
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    var role = HttpContextAccessor.HttpContext.Session.GetString("Role");
    ViewData["Title"] = "Edit";
}

<h1>Edit Account</h1>

<h4 class="text-danger">@ViewBag.Message</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" value="@Model.Password" type="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            @if (role == "Admin")
            {
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsAdmin" /> @Html.DisplayNameFor(model => model.IsAdmin)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                    </label>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
                @if (role == "Admin")
                {
                    <a asp-action="Index" class="btn btn-primary">Back to List</a>
                }
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}